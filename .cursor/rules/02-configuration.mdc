---
description:
globs:
alwaysApply: false
---
# Configuration Management

Configuration is primarily managed via environment variables, loaded from `.env` files by `dotenv` and validated by Zod.

- **Files:**
  - [.env.example](mdc:.env.example): Template, committed to git.
  - `.env`: Local development overrides, gitignored.
  - `.env.test`: Test environment overrides, gitignored.
- **Validation Schema:** Defined in [config/env.js](mdc:config/env.js) using Zod. Specifies required variables, types, defaults, and transformations.
- **Loading and Validation:** The `validateAndLoadEnv` function in [config/env.js](mdc:config/env.js) loads the appropriate `.env` file based on `NODE_ENV`, validates `process.env` against the schema, and **exits the process if validation fails**.
- **Usage:** [config/index.js](mdc:config/index.js) calls `validateAndLoadEnv` once and exports a structured, validated `config` object for use throughout the application (e.g., `config.db.connection.host`).

See [docs/03-configuration.md](mdc:docs/03-configuration.md) for more details.
